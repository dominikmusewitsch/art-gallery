// Importiere render() und screen von React Testing Library
import { render, screen } from "@testing-library/react";

// Importiere die zu testende Komponente
import Navigation from "./Navigation";

// Importiere Erweiterungen f√ºr Jest, um Dinge wie "toBeInTheDocument()" nutzen zu k√∂nnen
import "@testing-library/jest-dom";

// Importiere useRouter direkt, damit wir es mocken k√∂nnen
import { useRouter } from "next/router";

// ‚úÖ MOCK f√ºr useRouter aus Next.js
// Wir sagen Jest: Wenn irgendwo useRouter verwendet wird, liefere unsere eigene Version zur√ºck
jest.mock("next/router", () => ({
  useRouter: jest.fn(), // Wir ersetzen useRouter durch eine Jest-Mock-Funktion
}));

// üëá Beginn der Testsuite f√ºr die Navigation-Komponente
describe("Navigation component", () => {
  // beforeEach() l√§uft vor jedem einzelnen Test
  beforeEach(() => {
    // Wir legen fest: Wenn useRouter() aufgerufen wird, dann soll es ein Objekt mit pathname "/" zur√ºckgeben
    useRouter.mockReturnValue({ pathname: "/" });
  });

  // üß™ Test 1: Sind alle drei Links sichtbar?
  it("renders all navigation links", () => {
    render(<Navigation />); // Komponente rendern

    // Pr√ºfen, ob die drei Linktexte im DOM sichtbar sind
    expect(screen.getByRole("link", { name: "Spotlight" })).toBeInTheDocument();
    expect(screen.getByRole("link", { name: "Gallery" })).toBeInTheDocument();
    expect(screen.getByRole("link", { name: "Favorites" })).toBeInTheDocument();
  });

  // üß™ Test 2: Haben die Links die richtigen Zieladressen (href)?
  it("has correct hrefs for all links", () => {
    render(<Navigation />); // Komponente rendern

    // √úberpr√ºfe, ob der Linktext "Spotlight" den richtigen href enth√§lt
    expect(screen.getByRole("link", { name: "Spotlight" })).toHaveAttribute("href", "/");

    // Gleiches f√ºr die anderen beiden Navigationspunkte
    expect(screen.getByRole("link", { name: "Gallery" })).toHaveAttribute("href", "/gallery");
    expect(screen.getByRole("link", { name: "Favorites" })).toHaveAttribute("href", "/favorites");
  });
});
